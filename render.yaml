services:
  - type: web
    name: cloud-receipt-frontend
    env: node
    plan: free
    autoDeploy: true
    # Build: install deps, generate .env from Render env vars (if defined), then export web build
    buildCommand: |
      if [ -f package-lock.json ]; then npm ci || npm install; else npm install; fi
      # Create .env for react-native-dotenv (optional). Add keys in Render > Environment.
      # Prefer BASE_URL; fallback to API_BASE_URL; write as BASE_URL for the app to consume
      rm -f .env
      if [ -n "$BASE_URL" ]; then echo "BASE_URL=$BASE_URL" >> .env; fi
      if [ -n "$API_BASE_URL" ]; then echo "BASE_URL=$API_BASE_URL" >> .env; fi
      npx expo --version
      # Export web build explicitly to ./dist
      npx expo export --platform web --output-dir dist
      # Optional: list output for debugging
      ls -la dist || true
      # Ensure SPA entry works with serve: fallback to app.html
      if [ -f dist/app.html ] && [ ! -f dist/index.html ]; then cp dist/app.html dist/index.html; fi
      # Generate serve.json to rewrite all routes to app.html (works with `serve`)
      cat > dist/serve.json << 'EOF'
      {
        "rewrites": [
          { "source": "**", "destination": "/app.html" }
        ]
      }
      EOF
    startCommand: npx serve -s dist -l $PORT
    # Optional health check for static content
    healthCheckPath: /
    # Define build-time env vars here or via Render dashboard
    # envVars:
    #   - key: API_BASE_URL
    #     fromSecret: api-base-url
